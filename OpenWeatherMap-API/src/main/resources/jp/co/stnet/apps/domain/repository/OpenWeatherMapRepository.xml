<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.stnet.apps.domain.repository.OpenWeatherMapRepository">
    <resultMap id="BaseResultMap" type="jp.co.stnet.apps.domain.model.OpenWeatherMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="zipcode" jdbcType="VARCHAR" property="zipcode"/>
        <id column="dt_time" jdbcType="TIMESTAMP" property="dtTime"/>
        <result column="lon" jdbcType="DOUBLE" property="lon"/>
        <result column="lat" jdbcType="DOUBLE" property="lat"/>
        <result column="weather_id" jdbcType="INTEGER" property="weatherId"/>
        <result column="weather_main" jdbcType="VARCHAR" property="weatherMain"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="weather_icon" jdbcType="VARCHAR" property="weatherIcon"/>
        <result column="base" jdbcType="VARCHAR" property="base"/>
        <result column="temp" jdbcType="DOUBLE" property="temp"/>
        <result column="feel_like" jdbcType="DOUBLE" property="feelLike"/>
        <result column="temp_min" jdbcType="DOUBLE" property="tempMin"/>
        <result column="temp_max" jdbcType="DOUBLE" property="tempMax"/>
        <result column="pressure" jdbcType="DOUBLE" property="pressure"/>
        <result column="humidity" jdbcType="DOUBLE" property="humidity"/>
        <result column="visibility" jdbcType="INTEGER" property="visibility"/>
        <result column="wind_speed" jdbcType="DOUBLE" property="windSpeed"/>
        <result column="wind_direction" jdbcType="DOUBLE" property="windDirection"/>
        <result column="wind_gust" jdbcType="DOUBLE" property="windGust"/>
        <result column="cloud_all" jdbcType="DOUBLE" property="cloudAll"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="county" jdbcType="VARCHAR" property="county"/>
        <result column="sunrise_time" jdbcType="TIMESTAMP" property="sunriseTime"/>
        <result column="sunset_time" jdbcType="TIMESTAMP" property="sunsetTime"/>
        <result column="timezone" jdbcType="INTEGER" property="timezone"/>
        <result column="city_id" jdbcType="INTEGER" property="cityId"/>
        <result column="location_name" jdbcType="VARCHAR" property="locationName"/>
        <result column="status_code" jdbcType="INTEGER" property="statusCode"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        zipcode, dt_time, lon, lat, weather_id, weather_main, description, weather_icon,
        base, temp, feel_like, temp_min, temp_max, pressure, humidity, visibility, wind_speed,
        wind_direction, wind_gust, cloud_all, type, id, county, sunrise_time, sunset_time,
        timezone, city_id, location_name, status_code, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from public.open_weather_map
        where zipcode = #{zipcode,jdbcType=VARCHAR}
        and dt_time = #{dtTime,jdbcType=TIMESTAMP}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from public.open_weather_map
        where zipcode = #{zipcode,jdbcType=VARCHAR}
        and dt_time = #{dtTime,jdbcType=TIMESTAMP}
    </delete>
    <insert id="insert" parameterType="jp.co.stnet.apps.domain.model.OpenWeatherMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into public.open_weather_map (zipcode, dt_time, lon,
        lat, weather_id, weather_main,
        description, weather_icon, base,
        temp, feel_like, temp_min,
        temp_max, pressure, humidity,
        visibility, wind_speed, wind_direction,
        wind_gust, cloud_all, type,
        id, county, sunrise_time,
        sunset_time, timezone, city_id,
        location_name, status_code, create_time,
        update_time)
        values (#{zipcode,jdbcType=VARCHAR}, #{dtTime,jdbcType=TIMESTAMP}, #{lon,jdbcType=DOUBLE},
        #{lat,jdbcType=DOUBLE}, #{weatherId,jdbcType=INTEGER}, #{weatherMain,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR}, #{weatherIcon,jdbcType=VARCHAR}, #{base,jdbcType=VARCHAR},
        #{temp,jdbcType=DOUBLE}, #{feelLike,jdbcType=DOUBLE}, #{tempMin,jdbcType=DOUBLE},
        #{tempMax,jdbcType=DOUBLE}, #{pressure,jdbcType=DOUBLE}, #{humidity,jdbcType=DOUBLE},
        #{visibility,jdbcType=INTEGER}, #{windSpeed,jdbcType=DOUBLE}, #{windDirection,jdbcType=DOUBLE},
        #{windGust,jdbcType=DOUBLE}, #{cloudAll,jdbcType=DOUBLE}, #{type,jdbcType=INTEGER},
        #{id,jdbcType=INTEGER}, #{county,jdbcType=VARCHAR}, #{sunriseTime,jdbcType=TIMESTAMP},
        #{sunsetTime,jdbcType=TIMESTAMP}, #{timezone,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER},
        #{locationName,jdbcType=VARCHAR}, #{statusCode,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="jp.co.stnet.apps.domain.model.OpenWeatherMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into public.open_weather_map
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="zipcode != null">
                zipcode,
            </if>
            <if test="dtTime != null">
                dt_time,
            </if>
            <if test="lon != null">
                lon,
            </if>
            <if test="lat != null">
                lat,
            </if>
            <if test="weatherId != null">
                weather_id,
            </if>
            <if test="weatherMain != null">
                weather_main,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="weatherIcon != null">
                weather_icon,
            </if>
            <if test="base != null">
                base,
            </if>
            <if test="temp != null">
                temp,
            </if>
            <if test="feelLike != null">
                feel_like,
            </if>
            <if test="tempMin != null">
                temp_min,
            </if>
            <if test="tempMax != null">
                temp_max,
            </if>
            <if test="pressure != null">
                pressure,
            </if>
            <if test="humidity != null">
                humidity,
            </if>
            <if test="visibility != null">
                visibility,
            </if>
            <if test="windSpeed != null">
                wind_speed,
            </if>
            <if test="windDirection != null">
                wind_direction,
            </if>
            <if test="windGust != null">
                wind_gust,
            </if>
            <if test="cloudAll != null">
                cloud_all,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="id != null">
                id,
            </if>
            <if test="county != null">
                county,
            </if>
            <if test="sunriseTime != null">
                sunrise_time,
            </if>
            <if test="sunsetTime != null">
                sunset_time,
            </if>
            <if test="timezone != null">
                timezone,
            </if>
            <if test="cityId != null">
                city_id,
            </if>
            <if test="locationName != null">
                location_name,
            </if>
            <if test="statusCode != null">
                status_code,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="zipcode != null">
                #{zipcode,jdbcType=VARCHAR},
            </if>
            <if test="dtTime != null">
                #{dtTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lon != null">
                #{lon,jdbcType=DOUBLE},
            </if>
            <if test="lat != null">
                #{lat,jdbcType=DOUBLE},
            </if>
            <if test="weatherId != null">
                #{weatherId,jdbcType=INTEGER},
            </if>
            <if test="weatherMain != null">
                #{weatherMain,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="weatherIcon != null">
                #{weatherIcon,jdbcType=VARCHAR},
            </if>
            <if test="base != null">
                #{base,jdbcType=VARCHAR},
            </if>
            <if test="temp != null">
                #{temp,jdbcType=DOUBLE},
            </if>
            <if test="feelLike != null">
                #{feelLike,jdbcType=DOUBLE},
            </if>
            <if test="tempMin != null">
                #{tempMin,jdbcType=DOUBLE},
            </if>
            <if test="tempMax != null">
                #{tempMax,jdbcType=DOUBLE},
            </if>
            <if test="pressure != null">
                #{pressure,jdbcType=DOUBLE},
            </if>
            <if test="humidity != null">
                #{humidity,jdbcType=DOUBLE},
            </if>
            <if test="visibility != null">
                #{visibility,jdbcType=INTEGER},
            </if>
            <if test="windSpeed != null">
                #{windSpeed,jdbcType=DOUBLE},
            </if>
            <if test="windDirection != null">
                #{windDirection,jdbcType=DOUBLE},
            </if>
            <if test="windGust != null">
                #{windGust,jdbcType=DOUBLE},
            </if>
            <if test="cloudAll != null">
                #{cloudAll,jdbcType=DOUBLE},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="county != null">
                #{county,jdbcType=VARCHAR},
            </if>
            <if test="sunriseTime != null">
                #{sunriseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sunsetTime != null">
                #{sunsetTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timezone != null">
                #{timezone,jdbcType=INTEGER},
            </if>
            <if test="cityId != null">
                #{cityId,jdbcType=INTEGER},
            </if>
            <if test="locationName != null">
                #{locationName,jdbcType=VARCHAR},
            </if>
            <if test="statusCode != null">
                #{statusCode,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="jp.co.stnet.apps.domain.model.OpenWeatherMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update public.open_weather_map
        <set>
            <if test="lon != null">
                lon = #{lon,jdbcType=DOUBLE},
            </if>
            <if test="lat != null">
                lat = #{lat,jdbcType=DOUBLE},
            </if>
            <if test="weatherId != null">
                weather_id = #{weatherId,jdbcType=INTEGER},
            </if>
            <if test="weatherMain != null">
                weather_main = #{weatherMain,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="weatherIcon != null">
                weather_icon = #{weatherIcon,jdbcType=VARCHAR},
            </if>
            <if test="base != null">
                base = #{base,jdbcType=VARCHAR},
            </if>
            <if test="temp != null">
                temp = #{temp,jdbcType=DOUBLE},
            </if>
            <if test="feelLike != null">
                feel_like = #{feelLike,jdbcType=DOUBLE},
            </if>
            <if test="tempMin != null">
                temp_min = #{tempMin,jdbcType=DOUBLE},
            </if>
            <if test="tempMax != null">
                temp_max = #{tempMax,jdbcType=DOUBLE},
            </if>
            <if test="pressure != null">
                pressure = #{pressure,jdbcType=DOUBLE},
            </if>
            <if test="humidity != null">
                humidity = #{humidity,jdbcType=DOUBLE},
            </if>
            <if test="visibility != null">
                visibility = #{visibility,jdbcType=INTEGER},
            </if>
            <if test="windSpeed != null">
                wind_speed = #{windSpeed,jdbcType=DOUBLE},
            </if>
            <if test="windDirection != null">
                wind_direction = #{windDirection,jdbcType=DOUBLE},
            </if>
            <if test="windGust != null">
                wind_gust = #{windGust,jdbcType=DOUBLE},
            </if>
            <if test="cloudAll != null">
                cloud_all = #{cloudAll,jdbcType=DOUBLE},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="id != null">
                id = #{id,jdbcType=INTEGER},
            </if>
            <if test="county != null">
                county = #{county,jdbcType=VARCHAR},
            </if>
            <if test="sunriseTime != null">
                sunrise_time = #{sunriseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sunsetTime != null">
                sunset_time = #{sunsetTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timezone != null">
                timezone = #{timezone,jdbcType=INTEGER},
            </if>
            <if test="cityId != null">
                city_id = #{cityId,jdbcType=INTEGER},
            </if>
            <if test="locationName != null">
                location_name = #{locationName,jdbcType=VARCHAR},
            </if>
            <if test="statusCode != null">
                status_code = #{statusCode,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where zipcode = #{zipcode,jdbcType=VARCHAR}
        and dt_time = #{dtTime,jdbcType=TIMESTAMP}
    </update>
    <update id="updateByPrimaryKey" parameterType="jp.co.stnet.apps.domain.model.OpenWeatherMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update public.open_weather_map
        set lon = #{lon,jdbcType=DOUBLE},
        lat = #{lat,jdbcType=DOUBLE},
        weather_id = #{weatherId,jdbcType=INTEGER},
        weather_main = #{weatherMain,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        weather_icon = #{weatherIcon,jdbcType=VARCHAR},
        base = #{base,jdbcType=VARCHAR},
        temp = #{temp,jdbcType=DOUBLE},
        feel_like = #{feelLike,jdbcType=DOUBLE},
        temp_min = #{tempMin,jdbcType=DOUBLE},
        temp_max = #{tempMax,jdbcType=DOUBLE},
        pressure = #{pressure,jdbcType=DOUBLE},
        humidity = #{humidity,jdbcType=DOUBLE},
        visibility = #{visibility,jdbcType=INTEGER},
        wind_speed = #{windSpeed,jdbcType=DOUBLE},
        wind_direction = #{windDirection,jdbcType=DOUBLE},
        wind_gust = #{windGust,jdbcType=DOUBLE},
        cloud_all = #{cloudAll,jdbcType=DOUBLE},
        type = #{type,jdbcType=INTEGER},
        id = #{id,jdbcType=INTEGER},
        county = #{county,jdbcType=VARCHAR},
        sunrise_time = #{sunriseTime,jdbcType=TIMESTAMP},
        sunset_time = #{sunsetTime,jdbcType=TIMESTAMP},
        timezone = #{timezone,jdbcType=INTEGER},
        city_id = #{cityId,jdbcType=INTEGER},
        location_name = #{locationName,jdbcType=VARCHAR},
        status_code = #{statusCode,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where zipcode = #{zipcode,jdbcType=VARCHAR}
        and dt_time = #{dtTime,jdbcType=TIMESTAMP}
    </update>
</mapper>
